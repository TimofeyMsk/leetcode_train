"""
Условие задачи:
В здании 100 этажей. У нас есть vase_count керамических ваз. Выбрасывая
вазы из окна мы хотим выяснисть с какого самого высокого этажа
можно сбросить  вазу без ущерба для нее.
Разбитая ваза выбрасывается.
Неразбившаяся может быть использована для нового эксперимента.
Какое минимальное количество экспериментов в нихудшем случае
требуется,  чтобы точно выяснить "начиная с какого этажа"
ваза начнет разбиваться?
"""

"""
Будем проводить эксперименты выбирая этаж для броска 
в середине упорядоченного множества этажей.
Если ваза осталась цела, продолжим поиск нужного этажа в интервале 
от в правой части, иначе - в левой.
Если осталась одна ваза, то действуем осторожно проходя по
возможным этажам снизу вверх.
Канва доказательства корректности вычислений:
Вне зависимости от исхода эксперимента (броска) множество возможных этажей
сокращается примерно вдвое, а левый и правый интервалы различаются
по мощности не более чем на единицу. Таким образом оба интревала
одинково предпочтителены.
Очевидно, что нахудший сценарий возникает тогда, когда имеет место
череда разбитых ваз, т.к. это скращает число возможных экспериментов,
а количество оставшихся вариантов будет тем же что и при других 
сценариях.
"""


def exp_count(vase_count: int = 1, floor_count: int = 100) -> int:
    def helper(vase_left: int, low_floor: int, high_floor: int) -> int:
        print(f"vase_left->{vase_left:>2} | [{low_floor}, {high_floor:^3}] <-search_interval ")
        if vase_left == 1:
            return high_floor - low_floor + 1
        interval_len = high_floor - low_floor + 1
        if interval_len in (1, 2):
            return interval_len
        mid = low_floor+(high_floor-low_floor)//2
        return 1 + helper(vase_left-1, low_floor, mid-1)
    return helper(vase_count, 1, floor_count)


def print_test():
    for i in range(1, 11):
        title = f'Test with {i:>2} vases'
        print(f'{title:=^35}')
        print(f'-> exp_count = {exp_count(i)}')


print_test()
